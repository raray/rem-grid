
// mixins

// offset the column to the right
.rg-grid-offset(@pre, @int, @width) when (@int < @rg-col-num) {
    .rg-col-@{pre}-offset-@{int} {
        margin-left: @width;
    }
}

// push the column to the right
.rg-grid-push(@pre, @int, @width) when (@int < @rg-col-num) {
    .rg-col-@{pre}-push-@{int} {
        left: @width;
    }
}

// pull the column to the left
.rg-grid-pull(@pre, @int, @width) when (@int < @rg-col-num) {
    .rg-col-@{pre}-pull-@{int} {
            left: -@width;
        }
}

// create a full set of column classes
.rg-grid-create(@int, @pre, @width) {

    // column width
    .rg-col-@{pre}-@{int} {
        width: @width;
    }

    .rg-grid-offset(@pre, @int, @width);
    .rg-grid-push(@pre, @int, @width);
    .rg-grid-pull(@pre, @int, @width);
}

// recursive loop to create all the grid classes for a single breakpoint (pre)
.rg-grid-loop (@int, @total, @pre) when (@int >= 0) {
    @width: round((100% * (@int / @total)), 5);

    .rg-grid-create(@int, @pre, @width);

    // recurse
    .rg-grid-loop(@int - 1, @total, @pre);
}

// static classes

// controls the outer bounds
.rg-wrapper,
.rg-wrapper-full {
	width: 100%;
    margin-left: auto;
    margin-right: auto;
	padding-left: 1rem;
	padding-right: 1rem;
}

.rg-wrapper {
    max-width: @rg-wrapper-max-width;
}

// rows contain columns and clear for them
.rg-row {
	position: relative;
    margin-left: -0.5rem;
    margin-right: -0.5rem;

    // clearfix - http://nicolasgallagher.com/micro-clearfix-hack/
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}

// basic styles that all columns share
.rg-col {
	position: relative;
    float: left;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
}

// generated classes

// xs
.rg-grid-loop(@rg-col-num, @rg-col-num, xs);

// sm
@media (min-width: @sm-min) {
    .rg-grid-loop(@rg-col-num, @rg-col-num, sm);
}

// md
@media (min-width: @md-min) {
    .rg-grid-loop(@rg-col-num, @rg-col-num, md);
}

// lg
@media (min-width: @lg-min) {
    .rg-grid-loop(@rg-col-num, @rg-col-num, lg);
}

// xl
@media (min-width: @xl-min) {
    .rg-grid-loop(@rg-col-num, @rg-col-num, xl);
}
